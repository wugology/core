Action items for the meet-up:
- Decide where documentation lives
- Do documentation (as we go, and then in a focused manner at the end):
  - Meeting notes/structure? - Seems like this is better captured by other types of documentation
    - Can we use the GitHub events feature? Does this tie into Facebook?
  - Terms and abbreviations
  - File structure, location of action items, agenda items, wish list, backlogs
    - Feature requests / Wish lists / User stories: Things we haven't coded yet
    - Backlog: Things we've already coded but that need changes, or need additional features to be finished
    - [Line between these two is blurry]
  - Project, mission, goals
- Get everybody setup on GitHub
- Decide organization of GitHub and implement it
  - Proposed structure:
    - app
    - core: documentation, website pages, agenda/action items lists, html/css/js code shared across the project, etc.
    - learn: materials from wugbot meetings, files needed for Learning Zone portion of website
    - prototypes: prototypes or non-final versions of aspects of the project
      - Pat should dump a bajillion things in this repository so other team members can rummage through for useful code or ideas :)
    - research: materials for the Research section of the website, as well as private area for ongoing research that team members might be doing/collaborating on
      - including a standard for publishing linguistic articles on the web ('htlx publication')
      - a standardized htlx linguistics stylesheet
    - tools: the various tools of the wugbot app, as standalone tools
  - What filetypes to use, filenaming system
- Decide project workflow (e.g. sprints, when do we release updates, and what do we release, etc.)
- Map out site structure
  - Proposed structure:
    1. app - the unified tool set for inputing, managing, and manipulating linguistic data
    2. tools - the individual tools that constitute the app, available as standalone modules, and organized in some way
      - (at least) 3 types of tools:
        1. data entry (preferably always integrated with data editing)
        2. data editing (preferably always integrated with data entry)
        3. data viewing / searching / sorting / filtering
        4. data outputting:
          - exports
          - visualizations
          - document/article/publication preparation
          - statistics
          - social network sharing
          - creating 'htlx publications' (publications using our standardized html article and data formats)
    3. learning zone - where people can go to learn about web linguistics
    4. research - research outputs directly about web linguistics, or that use wugbot tools
      - htlx publishing interface (which doesn't have to be on our website)
- Create a home page and make it live
- Decide initial JSON data structure (for the linguistic data only)
  - Be as expansive as possible, thinking of all the things we'd like to support in the future, but acknowledge that the structure will inevitably change
- Decide data structure for non-linguistic data
  - Issues to consider:
    - Users being able to collaborate on projects
    - Authentication
    - Where do projects, corpora, users, orthographies, languages, etc. live?
    - Public vs. private vs. restricted data?
    - Working with other peoples' public data
    - Multiple analyses of the same data by different people (also linked vs. cloned)
- Create data persistence plan, for both client-side and server-side storage
  - Also what data gets loaded when, and where
- Implement client-side data persistence
- Implement server-side data persistence
- Implement user persistence
  - Who's working on the data
  - What data they have access to
  - Where there data is stored
  - Who else can view/edit their data
- Choose one tool to create, create it, implement it in the app, and make it live

Homework:
- Put anything htlx related that we have on our computers into the appropriate repository
- Combine wugbot/complingftw and htlx projects/organizations?
- Continue organizing GitHub according to our organizational principles
- Continue adding documentation
